<?xml version="1.0" encoding="UTF-8"?>
<project name="maximo-tool" basedir="." default="copymaximoclass">
	<!-- 配置属性 -->
	<!-- Maximo的开发路径，导出时为导出的Maximo  导入时为导入的 Maximo -->
	<property name="maximo.path" value="E:\Projects\shahe\maximo" />
	<!-- Maximo 代码的地址 -->
	<property name="maximo.code" value="F:\Workspace\Eclipse\workspace-maximo\STPI" />
	<!-- 导出目录 -->
	<property name="package.path" value="${basedir}" />
	<!-- 需要导出的对象 用 "," 分割 -->
	<property name="exportobjects" value="ST_PI_AREA,ST_PI_AREA_ITEM,ST_PI_DATABACKUP,ST_PI_DATABACKUPLOG,ST_PI_DATABASE,ST_PI_DATAFORMAT,ST_PI_DBSOURCE,ST_PI_DUTYCONFIG,ST_PI_DUTYINFO,ST_PI_INTERFACELOG,ST_PI_ITEM,ST_PI_ITEM_UNIT,ST_PI_LOG,ST_PI_POST,ST_PI_SITE,ST_PI_TASK,ST_PI_TASKCFG,ST_PI_TASKCFG_AREA,ST_PI_TASKCFG_ITEM,ST_PI_TASKCFG_USER,ST_PI_TASKDATETIME,ST_PI_TASK_AREA,ST_PI_TASK_ITEM,ST_PI_TASK_USER,ST_PI_USER" />
	<property name="exportdomainids" value="PI_CYCLE_UNIT,PI_PROFESSIONAL" />
	<property name="exportmodules" value="STPI" />
	<property name="exportapps" value="PI_POST" />
	
	<!-- Maximo的lib jar包 -->
	<property name="maximo.lib" value="${maximo.path}\lib" />
	<!-- Maximo的 maximouiweb Bean class 依赖 -->
	<property name="maximo.bean" value="${maximo.path}\maximouiweb\webmodule\WEB-INF\classes" />
	<!-- Maximo的businessobjects class 依赖 -->
	<property name="maximo.businessobjects" value="${maximo.path}\businessobjects\classes" />


	<!-- Maximo Java 源代码的地址 -->
	<property name="maximo.code.src" value="${maximo.code}\src" />
	<!-- Maximo 项目使用的Maximo以外的第三方jar包 -->
	<property name="maximo.code.thridjar" value="${maximo.code}\lib" />


	<!-- Maximo Java代码编译后的目录 -->
	<!-- 
	<property name="maximo.code.class" value="${package.path}/package/code/class" />
	<property name="maximo.code.class" value="${maximo.code}\bin" />
	-->
	<property name="maximo.code.classes" value="${package.path}/package/code/classes" />
	<!-- maximo-tool 项目编译后的路径 -->
	<property name="classes" value="bin" />

	<!-- ant运行需要的jar包 -->
	<path id="ant.run.lib.path">
		<pathelement path="${maximo.businessobjects}" />
		<pathelement path="${maximo.bean}" />
		<pathelement path="${classes}" />
		<fileset dir="${maximo.lib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${maximo.code.thridjar}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- 编译源代码  -->
	<target name="buildsourcecode" id="buildsourcecode" description="编译源代码">
		<echo message="-----------创建编译源代码的目录--------------" />
		<delete dir="${maximo.code.classes}" />
		<mkdir dir="${maximo.code.classes}" />
		<echo message="-----------开始编译源代码--------------" />
		<javac destdir="${maximo.code.classes}" srcdir="${maximo.code.src}" encoding="utf-8" includeantruntime="false" source="1.6" target="1.6">
			<compilerarg line="-encoding UTF-8 " />
			<classpath refid="ant.run.lib.path" />
		</javac>
		<echo message="-------编译完成---------" />
	</target>
	<!-- 复制 class 需要的配置文件 -->
	<property name="base.dir.app" value="com\shuto\mam\app" />
	<property name="base.dir.crontask" value="com\shuto\mam\crontask" />
	<property name="base.dir.beans" value="com\shuto\mam\webclient\beans" />

	<property name="bin.dir.beans" location="${maximo.code.classes}\${base.dir.beans}" />
	<property name="bin.dir.app" location="${maximo.code.classes}\${base.dir.app}" />
	<property name="bin.dir.crontask" location="${maximo.code.classes}\${base.dir.crontask}" />

	<property name="maximo.dir.beans" location="${maximo.path}\maximouiweb\webmodule\WEB-INF\classes\${base.dir.beans}" />
	<property name="maximo.dir.app" location="${maximo.path}\businessobjects\classes\${base.dir.app}" />
	<property name="maximo.dir.crontask" location="${maximo.path}\businessobjects\classes\${base.dir.crontask}" />

	<!-- 复制的文件的集合 -->

	<fileset id="bin.dir.app" dir="${bin.dir.app}">
		<include name="**/*.class" />
	</fileset>

	<fileset id="bin.path.beans" dir="${bin.dir.beans}">
		<include name="**/*.class" />
	</fileset>

	<fileset id="bin.dir.crontask" dir="${bin.dir.crontask}">
		<include name="**/*.class" />
	</fileset>
	<!-- 复制编译好的class代码 到项目中 复制会对比文件法神变化时复制-->
	<target name="copymaximoclass" id="copymaximoclass">
		<echo message="----复制编译后的代码到项目中---------------------" />
		<copy todir="${maximo.dir.app}">
			<fileset refid="bin.dir.app">
			</fileset>
		</copy>
		<copy todir="${maximo.dir.crontask}">
			<fileset refid="bin.dir.crontask">
			</fileset>
		</copy>
		<copy todir="${maximo.dir.beans}">
			<fileset refid="bin.path.beans">
			</fileset>
		</copy>
		<echo message="----复制编译后的代码到项目中-完成--------------------" />
	</target>
	<!-- 将数据库配置信息导出到导出目录中 -->
	<target name="exportdbconfig" id="exportdbconfig">
		<echo message="------------初始化数据库配置导出目录----------" />
		<delete dir="${basedir}/package/dbconfig" />
		<mkdir dir="${basedir}/package/dbconfig" />
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=exportdbconfig" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-packagepath=${basedir}" />
			<arg value="-exportobjects=${exportobjects}" />
		</java>
	</target>
	<!-- 从导出的文件中 导入数据库配置 -->
	<target name="importdbconfig" id="importdbconfig">
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=importdbconfig" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-importpath=${package.path}" />
		</java>
	</target>
	<!-- 调用maximo系统代码配置数据库 需要停止Maximo服务 -->
	<target name="configdb" id="configdb" depends="importdbconfig">
		<java classname="psdi.configure.ConfigDB" classpathref="ant.run.lib.path" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<arg value="-l" />
			<arg value="-e" />
			<arg value="-r" />
			<arg value="-k${maximo.path}\properties" />
			<arg value="${basedir}" />
		</java>
	</target>
	<!-- 将数据库配置信息导出到导出目录中 -->
	<target name="exportdomaindm" id="exportdomaindm">
		<echo message="------------初始化域导出目录----------" />
		<delete dir="${basedir}/package/domainadm" />
		<mkdir dir="${basedir}/package/domainadm" />
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=exportdomainadm" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-packagepath=${basedir}" />
			<arg value="-exportdomainids=${exportdomainids}" />
		</java>
	</target>
	<!-- 从导出的文件中 导入数据库配置 -->
	<target name="importdomainadm" id="importdomainadm">
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=importdomainadm" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-importpath=${package.path}" />
		</java>
	</target>
	
	<!-- 将应用信息导出到导出目录中 -->
	<target name="exportapp" id="exportapp">
		<echo message="------------初始化应用导出目录----------" />
		<delete dir="${basedir}/package/app" />
		<mkdir dir="${basedir}/package/app" />
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=exportapp" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-packagepath=${basedir}" />
			<arg value="-exportmodules=${exportmodules}" />
			<arg value="-exportapps=${exportapps}" />
		</java>
	</target>
	
	<!-- 从导出的文件中 导入数据库配置 -->
	<target name="importapp" id="importapp">
		<java classname="cn.shuto.maximo.tool.App" fork="true" failonerror="true">
			<sysproperty key="file.encoding" value="UTF-8" />
			<classpath refid="ant.run.lib.path">
			</classpath>
			<arg value="-option=importapp" />
			<arg value="-maximopath=${maximo.path}" />
			<arg value="-importpath=${package.path}" />
		</java>
	</target>
</project>